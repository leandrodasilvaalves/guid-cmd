name: .NET 7 Build and Release

on:
  push:
    branches:
      - main
      - develop
      - release/*

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      gitversion_fullsemver: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

  building:
    name: Building
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Dotnet Build
        run: dotnet build -c release --no-restore

      - name: Dotnet Test
        run: dotnet test --configuration Release --no-build

  packaging-on-linux:
    name: Packaging on Linux
    runs-on: ubuntu-latest
    needs: [versioning, building]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.versioning.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Dotnet Publish
        run: |
          dotnet publish -c Release --output GuidCmd.$GITVERSION_FULLSEMVER src/GuidCmd
          mv ./GuidCmd.$GITVERSION_FULLSEMVER/GuidCmd ./GuidCmd.$GITVERSION_FULLSEMVER/guid 
          tar -cvf GuidCmd.linux.tar.gz GuidCmd.$GITVERSION_FULLSEMVER
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: GuidCmd.linux.tar.gz
          path: GuidCmd.linux.tar.gz

  packaging-on-windows:
    name: Packaging on Windows
    runs-on: windows-latest
    needs: [versioning, building]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.versioning.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Dotnet Publish
        run: |
          $directoryPackage = "GuidCmd." + $env:GITVERSION_FULLSEMVER
          dotnet publish -c Release --output $directoryPackage src/GuidCmd

          $oldFileName = Join-Path -Path $directoryPackage -ChildPath "GuidCmd.exe"
          Rename-Item -Path $oldFileName -NewName "guid.exe"

          Compress-Archive -Path ".\$directoryPackage\*" -DestinationPath GuidCmd.windows.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: GuidCmd.windows.zip
          path: GuidCmd.windows.zip

  releasing:
    name: Releasing
    runs-on: ubuntu-latest
    needs: [versioning, packaging-on-linux, packaging-on-windows]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.versioning.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts Linux
        uses: actions/download-artifact@v2
        with:
          name: GuidCmd.linux.tar.gz

      - name: Download Artifacts Windows
        uses: actions/download-artifact@v2
        with:
          name: GuidCmd.windows.zip

      - name: Install .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x # gitreleasemanager dependency

      - name: Install GitReleaseManager
        run: dotnet tool install --global GitReleaseManager.Tool --version 0.14.0

      - name: Create Tag
        id: create_tag
        run: |
          echo "GITVERSION_FULLSEMVER: $GITVERSION_FULLSEMVER"
          git tag $GITVERSION_FULLSEMVER
          git push origin $GITVERSION_FULLSEMVER
          echo created tag: $GITVERSION_FULLSEMVER

      - name: Create Release
        run: |
          dotnet-gitreleasemanager create -n guid-cmd.$GITVERSION_FULLSEMVER \
          --token ${{ secrets.ACTION_PAT_SECRET }} \
          --owner ${{ github.repository_owner }} \
          --repository ${{ github.event.repository.name }} \
          --assets GuidCmd.linux.tar.gz,GuidCmd.windows.zip \
          --inputFilePath .github/workflows/GitReleaseManager.yaml

      - name: Publish Release
        run: |
          dotnet-gitreleasemanager publish \
          --tagName guid-cmd.$GITVERSION_FULLSEMVER \
          --token ${{ secrets.ACTION_PAT_SECRET }} \
          --owner ${{ github.repository_owner }} \
          --repository ${{ github.event.repository.name }}